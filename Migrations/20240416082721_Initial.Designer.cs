// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Papalandia.Context;

#nullable disable

namespace Papalandia.Migrations
{
    [DbContext(typeof(PapalandiaDbContext))]
    [Migration("20240416082721_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Papalandia.Models.Achievements", b =>
                {
                    b.Property<int>("AchievementsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementsId"));

                    b.Property<string>("AchievementsDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AchievementsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AchievementsId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Papalandia.Models.Crops", b =>
                {
                    b.Property<int>("CropsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CropsId"));

                    b.Property<int>("PestId")
                        .HasColumnType("int");

                    b.Property<int>("PlotsId")
                        .HasColumnType("int");

                    b.Property<int>("PotatoesId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("SowingDate")
                        .HasColumnType("date");

                    b.Property<int>("StateCropsId")
                        .HasColumnType("int");

                    b.HasKey("CropsId");

                    b.HasIndex("PestId");

                    b.HasIndex("PlotsId");

                    b.HasIndex("PotatoesId");

                    b.HasIndex("StateCropsId");

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("Papalandia.Models.Games", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<DateTime>("EndGame")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartGame")
                        .HasColumnType("datetime2");

                    b.Property<int>("StateGameId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.HasIndex("StateGameId");

                    b.HasIndex("UserId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Papalandia.Models.GamesAchievements", b =>
                {
                    b.Property<int>("AchievementUnlockedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementUnlockedId"));

                    b.Property<int>("AchievementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AchievementUnlocked")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("AchievementUnlockedId");

                    b.HasIndex("AchievementId");

                    b.HasIndex("GameId");

                    b.ToTable("GamesAchievements");
                });

            modelBuilder.Entity("Papalandia.Models.Pests", b =>
                {
                    b.Property<int>("PestsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PestsId"));

                    b.Property<string>("PestsDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PestsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuppliesId")
                        .HasColumnType("int");

                    b.HasKey("PestsId");

                    b.HasIndex("SuppliesId");

                    b.ToTable("Pests");
                });

            modelBuilder.Entity("Papalandia.Models.PlayerLocation", b =>
                {
                    b.Property<int>("PlayerLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerLocationId"));

                    b.Property<string>("CoordinateX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoordinateY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoordinateZ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerLocationId");

                    b.ToTable("PlayerLocation");
                });

            modelBuilder.Entity("Papalandia.Models.Plots", b =>
                {
                    b.Property<int>("PlotsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlotsId"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlotsSize")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PlotsId");

                    b.ToTable("Plots");
                });

            modelBuilder.Entity("Papalandia.Models.Potatoes", b =>
                {
                    b.Property<int>("PotatoesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PotatoesId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PotatoesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TimeGrowth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypePotatoesId")
                        .HasColumnType("int");

                    b.HasKey("PotatoesId");

                    b.HasIndex("TypePotatoesId");

                    b.ToTable("Potatoes");
                });

            modelBuilder.Entity("Papalandia.Models.StateCrops", b =>
                {
                    b.Property<int>("StateCropsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateCropsId"));

                    b.Property<string>("StateCrop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateCropsId");

                    b.ToTable("StateCrops");
                });

            modelBuilder.Entity("Papalandia.Models.StateGames", b =>
                {
                    b.Property<int>("StateGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateGameId"));

                    b.Property<int>("PlayerLocationId")
                        .HasColumnType("int");

                    b.HasKey("StateGameId");

                    b.HasIndex("PlayerLocationId")
                        .IsUnique();

                    b.ToTable("StateGames");
                });

            modelBuilder.Entity("Papalandia.Models.StateTasks", b =>
                {
                    b.Property<int>("StateTasksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateTasksId"));

                    b.Property<string>("StateTasksName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateTasksId");

                    b.ToTable("StateTasks");
                });

            modelBuilder.Entity("Papalandia.Models.Supplies", b =>
                {
                    b.Property<int>("SuppliesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuppliesId"));

                    b.Property<string>("SuppliesDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuppliesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeSuppliesId")
                        .HasColumnType("int");

                    b.HasKey("SuppliesId");

                    b.HasIndex("TypeSuppliesId");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("Papalandia.Models.Tasks", b =>
                {
                    b.Property<int>("TasksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TasksId"));

                    b.Property<int>("CropsId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateTask")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateTasksId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TasksId");

                    b.HasIndex("CropsId");

                    b.HasIndex("StateTasksId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Papalandia.Models.TypePotatoes", b =>
                {
                    b.Property<int>("TypePotatoesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypePotatoesId"));

                    b.Property<int>("TypeNamePotatoes")
                        .HasColumnType("int");

                    b.HasKey("TypePotatoesId");

                    b.ToTable("TypePotatoes");
                });

            modelBuilder.Entity("Papalandia.Models.TypeSupplies", b =>
                {
                    b.Property<int>("TypeSuppliesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeSuppliesId"));

                    b.Property<string>("NameTypeSupplies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeSuppliesId");

                    b.ToTable("TypeSupplies");
                });

            modelBuilder.Entity("Papalandia.Models.UserRol", b =>
                {
                    b.Property<int>("UserRolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRolId"));

                    b.Property<string>("UserRolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRolId");

                    b.ToTable("UserRols");
                });

            modelBuilder.Entity("Papalandia.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRolId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserRolId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Papalandia.Models.Crops", b =>
                {
                    b.HasOne("Papalandia.Models.Pests", "Pest")
                        .WithMany()
                        .HasForeignKey("PestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Papalandia.Models.Plots", "Plot")
                        .WithMany("Crops")
                        .HasForeignKey("PlotsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Papalandia.Models.Potatoes", "Potatoes")
                        .WithMany()
                        .HasForeignKey("PotatoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Papalandia.Models.StateCrops", "StateCrops")
                        .WithMany("Crops")
                        .HasForeignKey("StateCropsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pest");

                    b.Navigation("Plot");

                    b.Navigation("Potatoes");

                    b.Navigation("StateCrops");
                });

            modelBuilder.Entity("Papalandia.Models.Games", b =>
                {
                    b.HasOne("Papalandia.Models.StateGames", "StateGame")
                        .WithMany("Games")
                        .HasForeignKey("StateGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Papalandia.Models.Users", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StateGame");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Papalandia.Models.GamesAchievements", b =>
                {
                    b.HasOne("Papalandia.Models.Achievements", "Achievement")
                        .WithMany("Unlocks")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Papalandia.Models.Games", "Game")
                        .WithMany("Achievements")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Papalandia.Models.Pests", b =>
                {
                    b.HasOne("Papalandia.Models.Supplies", "Supplies")
                        .WithMany()
                        .HasForeignKey("SuppliesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("Papalandia.Models.Potatoes", b =>
                {
                    b.HasOne("Papalandia.Models.TypePotatoes", "TypePotatoes")
                        .WithMany("Potatoes")
                        .HasForeignKey("TypePotatoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypePotatoes");
                });

            modelBuilder.Entity("Papalandia.Models.StateGames", b =>
                {
                    b.HasOne("Papalandia.Models.PlayerLocation", "PlayerLocation")
                        .WithOne("StateGame")
                        .HasForeignKey("Papalandia.Models.StateGames", "PlayerLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerLocation");
                });

            modelBuilder.Entity("Papalandia.Models.Supplies", b =>
                {
                    b.HasOne("Papalandia.Models.TypeSupplies", "TypeSupplies")
                        .WithMany("Supplies")
                        .HasForeignKey("TypeSuppliesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeSupplies");
                });

            modelBuilder.Entity("Papalandia.Models.Tasks", b =>
                {
                    b.HasOne("Papalandia.Models.Crops", "Crops")
                        .WithMany("Tasks")
                        .HasForeignKey("CropsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Papalandia.Models.StateTasks", "StateTasks")
                        .WithMany("Tasks")
                        .HasForeignKey("StateTasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Papalandia.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crops");

                    b.Navigation("StateTasks");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Papalandia.Models.Users", b =>
                {
                    b.HasOne("Papalandia.Models.UserRol", "UserRol")
                        .WithMany("Users")
                        .HasForeignKey("UserRolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRol");
                });

            modelBuilder.Entity("Papalandia.Models.Achievements", b =>
                {
                    b.Navigation("Unlocks");
                });

            modelBuilder.Entity("Papalandia.Models.Crops", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Papalandia.Models.Games", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Papalandia.Models.PlayerLocation", b =>
                {
                    b.Navigation("StateGame")
                        .IsRequired();
                });

            modelBuilder.Entity("Papalandia.Models.Plots", b =>
                {
                    b.Navigation("Crops");
                });

            modelBuilder.Entity("Papalandia.Models.StateCrops", b =>
                {
                    b.Navigation("Crops");
                });

            modelBuilder.Entity("Papalandia.Models.StateGames", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("Papalandia.Models.StateTasks", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Papalandia.Models.TypePotatoes", b =>
                {
                    b.Navigation("Potatoes");
                });

            modelBuilder.Entity("Papalandia.Models.TypeSupplies", b =>
                {
                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("Papalandia.Models.UserRol", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Papalandia.Models.Users", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
